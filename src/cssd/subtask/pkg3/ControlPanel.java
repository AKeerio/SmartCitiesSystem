/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cssd.subtask.pkg3;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author b4014007
 */
public class ControlPanel extends javax.swing.JFrame {

    private SmartCity smartCity = new SmartCity();    
    private SensorNetwork[] networks = smartCity.getAllNetworks();
    private SensorStation[] stations;
    private SensorHandler[] sensors;
    
    private DefaultListModel networksModel=new DefaultListModel();
    private DefaultListModel stationsModel=new DefaultListModel();
    private DefaultListModel sensorsModel=new DefaultListModel();
    /**
     * Creates new form ControlPanel
     */
    
    public ControlPanel() {
        initComponents();      
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanelLabel = new javax.swing.JLabel();
        addStation = new javax.swing.JButton();
        addNetwork = new javax.swing.JButton();
        addUser = new javax.swing.JButton();
        deleteNetwork = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();
        deleteStation = new javax.swing.JButton();
        netWorksPane = new javax.swing.JScrollPane();
        networksList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        stationsList = new javax.swing.JList<>();
        sensorsTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        sensorsList = new javax.swing.JList<>();
        addSensor = new javax.swing.JButton();
        deleteSensor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        addActuator = new javax.swing.JButton();
        deleteActuator = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlPanelLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        controlPanelLabel.setText("Control  Panel");

        addStation.setText("Add New Station");
        addStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStationActionPerformed(evt);
            }
        });

        addNetwork.setText("Add New Network");
        addNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNetworkActionPerformed(evt);
            }
        });

        addUser.setText("Add New User");
        addUser.setToolTipText("");
        addUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserMouseClicked(evt);
            }
        });
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        deleteNetwork.setText("Delete Network");
        deleteNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteNetworkActionPerformed(evt);
            }
        });

        deleteUser.setText("Delete User");
        deleteUser.setToolTipText("");

        deleteStation.setText("Delete Station");
        deleteStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStationActionPerformed(evt);
            }
        });

        networksList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        networksList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                networksListValueChanged(evt);
            }
        });
        netWorksPane.setViewportView(networksList);

        stationsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                stationsListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(stationsList);

        jScrollPane4.setViewportView(sensorsList);

        addSensor.setText("Add New Sensor");
        addSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSensorActionPerformed(evt);
            }
        });

        deleteSensor.setText("Delete Sensor");
        deleteSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSensorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 174, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addSensor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteSensor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(169, 169, 169)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSensor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteSensor)
                .addGap(10, 10, 10))
        );

        sensorsTab.addTab("Sensors", jPanel1);

        addActuator.setText("Add New Actuator");

        deleteActuator.setText("Delete Actuator");

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteActuator, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addActuator))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(178, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addActuator)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteActuator)
                    .addComponent(jButton2))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(77, Short.MAX_VALUE)))
        );

        sensorsTab.addTab("Actuator and rules", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(149, 149, 149)
                        .addComponent(controlPanelLabel)
                        .addContainerGap(318, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(netWorksPane)
                            .addComponent(deleteNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(deleteStation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(addStation))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(sensorsTab, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(controlPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteUser)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sensorsTab)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(netWorksPane, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addNetwork)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteNetwork))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addStation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteStation)))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_addUserMouseClicked

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        // TODO add your handling code here:
       //new AddUserPanel().setVisible(true);
    }//GEN-LAST:event_addUserActionPerformed

    private void addNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNetworkActionPerformed
        smartCity.addNewNetwork();
        networks = smartCity.getAllNetworks();
        networksModel.addElement(""+networks[smartCity.getNetworksCount()-1].getId());
        networksList.setModel(networksModel);
  //      JOptionPane.showMessageDialog(null, "network added");
    }//GEN-LAST:event_addNetworkActionPerformed

    private void networksListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_networksListValueChanged
      
       
        if(networksList.getSelectedValue()!=null)
        {
            stationsModel.removeAllElements();
            int index = networksList.getSelectedIndex();
            SensorStation[] stations = networks[index].getAllStations();
            //JOptionPane.showMessageDialog(null, index + " \t " + smartCity.getNetworksCount());
            
            for (int i=0;i<networks[index].getStationsCount(); i++)
            {
                stationsModel.addElement(""+stations[i].getId());                  
            }
            stationsList.setModel(stationsModel);
        }
    }//GEN-LAST:event_networksListValueChanged

    private void addStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStationActionPerformed
        
        
        if(networksList.getSelectedValue()!=null)
        {
            int index = networksList.getSelectedIndex();
            networks[index].addNewStation();
            stations = networks[index].getAllStations();
            stationsModel.addElement(""+stations[networks[index].getStationsCount()-1].getId());
            stationsList.setModel(stationsModel);            
        
       //     JOptionPane.showMessageDialog(null, "Station added");
        }
    }//GEN-LAST:event_addStationActionPerformed

    private void deleteNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteNetworkActionPerformed
        int reply = JOptionPane.showConfirmDialog(this, "Do you want to delete this network?", "Delete Network", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            if(networksList.getSelectedValue()!=null)
            {
                int index = networksList.getSelectedIndex();
                smartCity.deleteNetwork(networks[index]);
                networksModel.remove(networksList.getSelectedIndex());
                networksList.setModel(networksModel);
                networks=smartCity.getAllNetworks();
            }
        }
    }//GEN-LAST:event_deleteNetworkActionPerformed

    private void deleteStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStationActionPerformed
        int reply = JOptionPane.showConfirmDialog(this, "Do you want to delete this station?", "Delete station", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            int networkIndex=networksList.getSelectedIndex();
            if(stationsList.getSelectedValue()!=null)
            {
                int index = stationsList.getSelectedIndex();
                networks[networkIndex].deleteStation(stations[index]);
                stationsModel.remove(stationsList.getSelectedIndex());
                stationsList.setModel(stationsModel);
            }
        }
      
    }//GEN-LAST:event_deleteStationActionPerformed

    private void addSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSensorActionPerformed
        
        String location = JOptionPane.showInputDialog("Input a location for the sensor");
        String Id = JOptionPane.showInputDialog("Input a Id for the sensor");
  //      String  Id = JOptionPane.showInputDialog("Input an id for the sensor");
  
        Sensor sensor =new Sensor(location);
        SensorHandler sensorHandler=new SensorHandler(sensor);
        stationsList.getSelectedValue();
        int currentNetwork=Integer.parseInt(networksList.getSelectedValue());
        for (int i = 0; i < networks[currentNetwork].getStationsCount(); i++) {
            int stationId=Integer.parseInt(stationsList.getSelectedValue());
            if(stations[i].getId()==stationId)
            {
                stations[stationId].addNewSensor(sensorHandler);
            }
        }
        
        sensorsModel.addElement(sensorHandler.getId()+"");
        sensorsList.setModel(sensorsModel);//update list
    }//GEN-LAST:event_addSensorActionPerformed

    private void deleteSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSensorActionPerformed
        
        int reply = JOptionPane.showConfirmDialog(this, "Do you want to delete this sensor?", "Delete sensor", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            int stationIndex=stationsList.getSelectedIndex();
            if(sensorsList.getSelectedValue()!=null)
            {
                int index = sensorsList.getSelectedIndex();
                stations[stationIndex].deleteSensor(sensors[index]);
                sensorsModel.remove(sensorsList.getSelectedIndex());
                sensorsList.setModel(sensorsModel);
            }
        }

    }//GEN-LAST:event_deleteSensorActionPerformed

    private void stationsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_stationsListValueChanged
  
        if(stationsList.getSelectedValue()!=null)
        {
            sensorsModel.removeAllElements();
            int index = stationsList.getSelectedIndex();
            sensors = stations[index].getAllSensors();//needs to be implemented
            //JOptionPane.showMessageDialog(null, index + " \t " + smartCity.getNetworksCount());
            
            for (int i=0;i<stations[index].getSensorCount(); i++)
            {
                sensorsModel.addElement(""+sensors[i].getId());                  
            }
            sensorsList.setModel(sensorsModel);
        }
      
      //code here to actaully delete sensors from backend
    }//GEN-LAST:event_stationsListValueChanged

    public void addExistingNetworks()
    {
        //demo networks to add them initially
        smartCity.addNewNetwork();
        smartCity.addNewNetwork();
        networks = smartCity.getAllNetworks();
        for (int i =0; i<smartCity.getNetworksCount();  i++)
        {
            networksModel.addElement(""+networks[i].getId());
        }
        networksList.setModel(networksModel);
    }
    /**
     * @param args the command line arguments
     */
//    public void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//            
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ControlPanel cp= new ControlPanel();
//                cp.addExistingNetworks();
//                cp.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addActuator;
    private javax.swing.JButton addNetwork;
    private javax.swing.JButton addSensor;
    private javax.swing.JButton addStation;
    private javax.swing.JButton addUser;
    private javax.swing.JLabel controlPanelLabel;
    private javax.swing.JButton deleteActuator;
    private javax.swing.JButton deleteNetwork;
    private javax.swing.JButton deleteSensor;
    private javax.swing.JButton deleteStation;
    private javax.swing.JButton deleteUser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane netWorksPane;
    private javax.swing.JList<String> networksList;
    private javax.swing.JList<String> sensorsList;
    private javax.swing.JTabbedPane sensorsTab;
    private javax.swing.JList<String> stationsList;
    // End of variables declaration//GEN-END:variables
}
